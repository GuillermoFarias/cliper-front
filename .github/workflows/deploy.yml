name: Build, Push and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Vultr Container Registry
        uses: docker/login-action@v3
        with:
          registry: ewr.vultrcr.com
          username: ${{ secrets.VULTR_REGISTRY_USERNAME }}
          password: ${{ secrets.VULTR_REGISTRY_PASSWORD }}

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          echo "$calculatedSha" > commit_sha.txt

      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ewr.vultrcr.com/cliper/cliper-front:latest
            ewr.vultrcr.com/cliper/cliper-front:${{ env.COMMIT_SHORT_SHA }}

      - name: Upload commit SHA
        uses: actions/upload-artifact@v3
        with:
          name: commit-sha
          path: commit_sha.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download commit SHA
        uses: actions/download-artifact@v3
        with:
          name: commit-sha

      - name: Read commit SHA from file
        id: read-sha
        run: |
          COMMIT_SHORT_SHA=$(cat commit_sha.txt)
          echo "COMMIT_SHORT_SHA=$COMMIT_SHORT_SHA" >> $GITHUB_ENV

      - name: Set up Kubernetes configuration
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Confirm image to deploy
        run: echo ewr.vultrcr.com/cliper/cliper-front:${{ env.COMMIT_SHORT_SHA }}

      - name: Display kubeconfig
        run: cat $HOME/.kube/config

      - name: Get Kubernetes namespaces
        run: |
          docker run --rm \
            -v $HOME/.kube:/root/.kube \
            alpine:latest \
            sh -c "apk add --no-cache kubectl && \
                   kubectl get namespaces"

      - name: Deploy to Kubernetes
        run: |
          docker run --rm \
            -v $HOME/.kube:/root/.kube \
            alpine:latest \
            sh -c "apk add --no-cache kubectl && \
                   kubectl set image deployment/cliper-api cliper-api=ewr.vultrcr.com/cliper/cliper-front:${{ env.COMMIT_SHORT_SHA }} --namespace cliper"
